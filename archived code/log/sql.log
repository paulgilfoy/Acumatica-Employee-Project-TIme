(102570,9/7/2022 12:00:00 AM,202236,202236)
SELECT [EPActivityApprove].[NoteID], [EPActivityApprove].[RefNoteID], NULL, NULL, NULL, [EPActivityApprove].[ParentTaskNoteID], [EPActivityApprove].[TimeSheetCD], [EPActivityApprove].[Summary], [EPActivityApprove].[OwnerID], [EPActivityApprove].[EarningTypeID], [EPActivityApprove].[IsBillable], [EPActivityApprove].[CostCodeID], [EPActivityApprove].[ExtRefNbr], [EPActivityApprove].[CertifiedJob], [EPActivityApprove].[UnionID], [EPActivityApprove].[ApprovedDate], [EPActivityApprove].[WorkgroupID], [EPActivityApprove].[TimeSpent], [EPActivityApprove].[OvertimeSpent], [EPActivityApprove].[TimeBillable], [EPActivityApprove].[OvertimeBillable], [EPActivityApprove].[Billed], [EPActivityApprove].[Released], [EPActivityApprove].[IsCorrected], [EPActivityApprove].[OrigNoteID], [EPActivityApprove].[TranID], [EPActivityApprove].[LabourItemID], [EPActivityApprove].[WorkCodeID], [EPActivityApprove].[OvertimeItemID], [EPActivityApprove].[JobID], [EPActivityApprove].[ShiftID], [EPActivityApprove].[EmployeeRate], [EPActivityApprove].[SummaryLineNbr], [EPActivityApprove].[ReportedInTimeZoneID], [EPActivityApprove].[CreatedByID], [EPActivityApprove].[CreatedByScreenID], [EPActivityApprove].[CreatedDateTime], [EPActivityApprove].[LastModifiedByID], [EPActivityApprove].[LastModifiedByScreenID], [EPActivityApprove].[LastModifiedDateTime], [EPActivityApprove].[tstamp], [EPActivityApprove].[TrackTime], [EPActivityApprove].[ContractID], [EPActivityApprove].[ProjectID], [EPActivityApprove].[ProjectTaskID], [EPActivityApprove].[Date], [EPActivityApprove].[WeekID], [EPActivityApprove].[TimeCardCD], [EPActivityApprove].[ApprovalStatus], [EPActivityApprove].[ApproverID], [EPActivityApprove].[UsrPGIsPaused], [EPActivityApprove].[UsrPGEndDate], [EPActivityApprove].[UsrPGProgressStartTime], [EPActivityApprove].[UsrPGProgressEndTime], [EPActivityApprove].[UsrPGProgressTimeSpent], [EPActivityApprove].[UsrPGClockStatus], [EPEarningType].[TypeCD], [EPEarningType].[Description], [EPEarningType].[IsActive], [EPEarningType].[IsOvertime], [EPEarningType].[isBillable], [EPEarningType].[ProjectID], [EPEarningType].[TaskID], [EPEarningType].[OvertimeMultiplier], [EPEarningType].[tstamp], [EPEarningType].[CreatedByID], [EPEarningType].[CreatedByScreenID], [EPEarningType].[CreatedDateTime], [EPEarningType].[LastModifiedByID], [EPEarningType].[LastModifiedByScreenID], [EPEarningType].[LastModifiedDateTime], [CRActivityLink].[NoteID], [CRActivityLink].[ParentNoteID], [CRActivityLink].[RefNoteID], [CRCase].[CaseCD], [CRCase].[CreatedDateTime], [CRCase].[CaseClassID], [CRCase].[Subject], [CRCase].[Description], [CRCase].[CustomerID], [CRCase].[LocationID], [CRCase].[ContractID], [CRCase].[ContactID], [CRCase].[Status], [CRCase].[IsActive], [CRCase].[Released], [CRCase].[Resolution], [CRCase].[WorkgroupID], [CRCase].[OwnerID], [CRCase].[AssignDate], [CRCase].[Source], [CRCase].[Severity], [CRCase].[Priority], [CRCase].[SLAETA], [CRCase].[TimeEstimated], DATEDIFF(mi, [CRCase].[CreatedDateTime], (SELECT TOP (1) [CRActivity].[StartDate]

FROM [CRActivity] [CRActivity]

WHERE ( [CRActivity].[RefNoteID] = [CRCase].[NoteID] AND ( [CRActivity].[IsPrivate] IS NULL  OR [CRActivity].[IsPrivate] = CONVERT (BIT, 0)) AND [CRActivity].[OwnerID] IS NOT NULL  AND ( [CRActivity].[Incoming] IS NULL  OR [CRActivity].[Incoming] = CONVERT (BIT, 0)) AND ( [CRActivity].[IsExternal] IS NULL  OR [CRActivity].[IsExternal] = CONVERT (BIT, 0)))

ORDER BY [CRActivity].[StartDate])), [CRCase].[TimeSpent], [CRCase].[OvertimeSpent], [CRCase].[IsBillable], [CRCase].[ManualBillableTimes], [CRCase].[TimeBillable], [CRCase].[OvertimeBillable], [CRCase].[ResolutionDate], [CRCase].[ARRefNbr], [CRCase].[Date], [CRCase].[StatusDate], [CRCase].[StatusRevision], [CRCase].[NoteID], NULL, NULL, NULL, [CRCase].[tstamp], [CRCase].[CreatedByID], [CRCase].[CreatedByScreenID], [CRCase].[LastModifiedByID], [CRCase].[LastModifiedByScreenID], [CRCase].[LastModifiedDateTime], [ContractEx].[ContractID], [ContractEx].[BaseType], [ContractEx].[ContractCD], [ContractEx].[TemplateID], [ContractEx].[Description], [ContractEx].[OriginalContractID], [ContractEx].[MasterContractID], [ContractEx].[CaseItemID], [ContractEx].[Type], [ContractEx].[ClassType], [ContractEx].[CustomerID], [ContractEx].[LocationID], [ContractEx].[RateTableID], [ContractEx].[Status], [ContractEx].[Duration], [ContractEx].[DurationType], [ContractEx].[StartDate], [ContractEx].[ActivationDate], [ContractEx].[RenewalBillingStartDate], [ContractEx].[ExpireDate], [ContractEx].[TerminationDate], [ContractEx].[GracePeriod], DATEADD(dd, [ContractEx].[GracePeriod], [ContractEx].[ExpireDate]), [ContractEx].[AutoRenew], [ContractEx].[AutoRenewDays], (CASE WHEN ( [ContractEx].[BaseType] = 'T' OR [ContractEx].[BaseType] = 'R') THEN CONVERT (BIT, 1) ELSE CONVERT (BIT, 0) END), [ContractEx].[CuryID], [ContractEx].[RateTypeID], [ContractEx].[AllowOverrideCury], [ContractEx].[AllowOverrideRate], [ContractEx].[CalendarID], [ContractEx].[CreateProforma], [ContractEx].[AutomaticReleaseAR], [ContractEx].[Refundable], [ContractEx].[RefundPeriod], [ContractEx].[EffectiveFrom], [ContractEx].[DiscontinueAfter], [ContractEx].[DiscountID], [ContractEx].[DetailedBilling], [ContractEx].[AllowOverride], [ContractEx].[RefreshOnRenewal], [ContractEx].[IsContinuous], [ContractEx].[DefaultSalesAccountID], [ContractEx].[DefaultSalesSubID], [ContractEx].[DefaultExpenseAccountID], [ContractEx].[DefaultExpenseSubID], [ContractEx].[DefaultAccrualAccountID], [ContractEx].[DefaultAccrualSubID], [ContractEx].[DefaultBranchID], [ContractEx].[QuoteNbr], [ContractEx].[RestrictToEmployeeList], [ContractEx].[RestrictToResourceList], [ContractEx].[ApproverID], [ContractEx].[OwnerID], [ContractEx].[SalesPersonID], [ContractEx].[ScheduleStartsOn], [ContractEx].[AccountingMode], [ContractEx].[PrepaymentEnabled], [ContractEx].[PrepaymentDefCode], [ContractEx].[LimitsEnabled], [ContractEx].[ChangeOrderWorkflow], [ContractEx].[LockCommitments], [ContractEx].[BudgetMetricsEnabled], [ContractEx].[CertifiedJob], [ContractEx].[IncludeQtyInAIA], [ContractEx].[AIALevel], [ContractEx].[BillingID], [ContractEx].[AllocationID], [ContractEx].[ContractAccountGroup], [ContractEx].[TermsID], [ContractEx].[LastChangeOrderNumber], [ContractEx].[LastProformaNumber], [ContractEx].[RetainagePct], [ContractEx].[RetainageMaxPct], [ContractEx].[RetainageMode], [ContractEx].[IncludeCO], [ContractEx].[SteppedRetainage], [ContractEx].[SiteAddress], [ContractEx].[Hold], [ContractEx].[Approved], [ContractEx].[Rejected], [ContractEx].[IsActive], [ContractEx].[IsCompleted], [ContractEx].[IsCancelled], [ContractEx].[IsPendingUpdate], [ContractEx].[AutoAllocate], [ContractEx].[IsLastActionUndoable], [ContractEx].[VisibleInGL], [ContractEx].[VisibleInAP], [ContractEx].[VisibleInAR], [ContractEx].[VisibleInSO], [ContractEx].[VisibleInPO], [ContractEx].[VisibleInTA], [ContractEx].[VisibleInEA], [ContractEx].[VisibleInIN], [ContractEx].[VisibleInCA], [ContractEx].[VisibleInCR], [ContractEx].[NonProject], [ContractEx].[RevID], [ContractEx].[LastActiveRevID], [ContractEx].[LineCtr], [ContractEx].[BillingLineCntr], [ContractEx].[NoteID], NULL, NULL, NULL, [ContractEx].[tstamp], [ContractEx].[CreatedByID], [ContractEx].[CreatedByScreenID], [ContractEx].[CreatedDateTime], [ContractEx].[LastModifiedByID], [ContractEx].[LastModifiedByScreenID], [ContractEx].[LastModifiedDateTime], [ContractEx].[GroupMask], [ContractEx].[ServiceActivate], [ContractEx].[DropshipExpenseAccountSource], [ContractEx].[DropshipExpenseSubMask], [ContractEx].[DropshipReceiptProcessing], [ContractEx].[DropshipExpenseRecording], [ContractEx].[Usr401kStatus], [ContractEx].[UsrPGDepartment], [ContractEx].[UsrPGPriority], [ContractEx].[UsrPGTaxStatus], [ContractEx].[UsrPGIsFinal], [ContractEx].[UsrPGAcctStatus], [ContractEx].[UsrPGAuditStatus], [ContractEx].[UsrPGTechStatus]

FROM [PMTimeActivity] [EPActivityApprove]
LEFT JOIN [EPEarningType] [EPEarningType] ON [EPEarningType].[TypeCD] = [EPActivityApprove].[EarningTypeID]
LEFT JOIN (
SELECT [CRActivity].[NoteID] AS [NoteID], [CRActivity].[ParentNoteID] AS [ParentNoteID], [CRActivity].[RefNoteID] AS [RefNoteID]
FROM [CRActivity] [CRActivity]
) [CRActivityLink] ON [CRActivityLink].[NoteID] = [EPActivityApprove].[RefNoteID]
LEFT JOIN [CRCase] [CRCase] ON [CRCase].[NoteID] = [CRActivityLink].[RefNoteID]
LEFT JOIN [Contract] [ContractEx] ON [CRCase].[ContractID] = [ContractEx].[ContractID]
WHERE ( ( ( [EPActivityApprove].[OwnerID] = @P0 AND [EPActivityApprove].[TrackTime] = CONVERT (BIT, 1) AND [EPActivityApprove].[IsCorrected] = CONVERT (BIT, 0)) AND ( [EPActivityApprove].[Date] = @P1)) AND ( [EPActivityApprove].[ApprovalStatus] = 'RJ' OR ( [EPActivityApprove].[WeekID] >= @P2 AND ( [EPActivityApprove].[WeekID] <= @P3))))
ORDER BY [EPActivityApprove].[Date] DESC

/* Stack Trace:

   at PX.Common.PXStackTrace.GetStackTrace(Int32 skipFrames, Boolean needFileInfo)
   at PX.SM.PXPerformanceInfo.AddSqlSample(String cmdText, String parameterDeclaration, Boolean queryCache)
   at PX.Data.PXView.Select(Object[] currents, Object[] parameters, Object[] searches, String[] sortcolumns, Boolean[] descendings, PXFilterRow[] filters, Int32& startRow, Int32 maximumRows, Int32& totalRows)
   at PX.Data.PXView.SelectMultiBound(Object[] currents, Object[] parameters)
   at PX.Objects.EP.EmployeeActivitiesEntry_Extension.activity()
   at _CustomMethod(Object , Object[] )
   at PX.Data.PXView.InvokeDelegate(Object[] parameters)
   at PX.Data.PXView.Select(Object[] currents, Object[] parameters, Object[] searches, String[] sortcolumns, Boolean[] descendings, PXFilterRow[] filters, Int32& startRow, Int32 maximumRows, Int32& totalRows)
   at PX.Data.PXView.SelectMultiBound(Object[] currents, Object[] parameters)
   at PX.Data.PXSelectBase`1.selectBound(Object[] currents, Object[] arguments)
   at PX.Objects.EP.EmployeeActivitiesEntry.PMTimeActivityFilter_RowSelected(PXCache sender, PXRowSelectedEventArgs e)
   at PX.Data.PXCache.OnRowSelected(Object item)
   at PX.Data.PXCache`1.Load()
   at PX.Data.PXGraph.Load()
   at PX.Web.UI.PXBaseDataSource.PrepareDataBinding()
   at PX.Web.UI.PXBaseDataSource.OnInit(EventArgs e)
   at System.Web.UI.Control.InitRecursive(Control namingContainer)
   at System.Web.UI.Control.InitRecursive(Control namingContainer)
   at System.Web.UI.Control.InitRecursive(Control namingContainer)
   at System.Web.UI.Control.InitRecursive(Control namingContainer)
   at System.Web.UI.Control.InitRecursive(Control namingContainer)
   at System.Web.UI.Control.InitRecursive(Control namingContainer)
   at System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)
   at System.Web.UI.Page.ProcessRequest(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)
   at System.Web.UI.Page.ProcessRequest()
   at System.Web.UI.Page.ProcessRequest(HttpContext context)
   at PX.Web.UI.PXPage.ProcessRequest(HttpContext context)
 */